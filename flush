sudo mk-build-deps -i

sudo sh -c 'echo 3 >/proc/sys/vm/drop_caches'
ffmpeg -i mjpegvideo.avi -vcodec copy frame%d.jpg


qemu-system-x86_64 -m 512 -curses -hda /dev/sdc -enable-kvm -display sdl
qemu-system-x86_64 -usb -usbdevice disk:/dev/sda -m 512 -display sdl


sudo ifconfig can0 down
sudo ifconfig can1 down

sudo ip link set can1 type can bitrate 500000
sudo ip link set up can1

sudo ip link set can0 type can bitrate 500000
sudo ip link set up can0



auto can0
iface can0 inet manual
        pre-up /sbin/ip link set $IFACE type can bitrate 500000 on
        up /sbin/ifconfig $IFACE up
        down /sbin/ifconfig $IFACE down
        
        
scp chen@192.168.31.163:/home/chen/workbench/debian-sdk/packages/gstreamer1.0-rockchip1-extra_20171218-2_armhf.deb ./
dpkg -i ./*.deb

scp chen@192.168.31.163:/home/chen/workbench/debian-sdk/rk-rootfs-build/overlay-firmware/etc/cam_iq/imx219.xml /etc/cam_iq/imx2
19.xml

scp chen@192.168.31.163:/home/chen/workbench/debian-sdk/out/kernel/* boot/
sync

#!/bin/sh

export DISPLAY=:0.0 
#exxort GST_DEBUG=ispsrc:5
#export GST_DEBUG_FILE=/tmp/2.txt

service lightdm stop

echo 1 > /sys/module/video_rkisp1/parameters/debug

gst-launch-1.0 rkcamsrc device=/dev/video1 tuning-xml-path=/etc/cam_iq/imy219.xml io-mode=4 isp-mode=2A ! videoconvert ! video/
x-raw,format=NV12,width=1920,height=1080  ! kmssink

#!/bin/sh

export DISPLAY=:0.0 
#export GST_DEBUG=ispsrc:5
#export GST_DEBUG_FILE=/tmp/2.txt

service0lightdm stop

echo 1 > /sys/module/video_rkisp1/parameters/debug

gst-launch-1.0 rkcamsrc device=/dev/video1 io-mode=4 isp-mode=0A ! videoconvert ! video/x-raw,format=NV12,width=640,height=480 
 ! kmssink
 
 
mount -n -t jffs2 /dev/mtdblock3 -o rw,noatime,mode=0755 /overlay
mount -n -t overlayfs overlayfs:/overlay -o rw,noatime,lowerdir=/,upperdir=/overlay /mnt
mount -n /proc -o noatime,--move /mnt/proc
pivot_root /mnt /mnt/rom 
mount -n /rom/dev -o noatime,--move /dev
mount -n /rom/tmp -o noatime,--move /tmp
mount -n /rom/sys -o noatime,--move /sys
mount -n /rom/overlay -o noatime,--move /overlay


export QSG_INFO=1
export QT_LOGGING_RULES=qt.qpa.*=true
export QT_QPA_EGLFS_DEBUG

make ARCH=arm savedefconfig && mv defconfig arch/arm/configs/rockchip_linux_defconfig
make ARCH=arm64 savedefconfig && mv defconfig arch/arm64/configs/rockchip_linux_defconfig

gbp dch --debian-branch debian -s release_20170811
gbp dch --debian-branch rockchip -R -c

 mkimage -A arm -O linux -T kernel -C none -a 0x02008000 -e 0x02008000 -n 4.4 -d ./Image  ./uImage
 
 mount -n -t jffs2 /dev/mtdblock3 -o rw,noatime,mode=0755 /overlay
mount -n -t overlayfs overlayfs:/overlay -o rw,noatime,lowerdir=/,upperdir=/overlay /mnt
mount -n /proc -o noatime,--move /mnt/proc
pivot_root /mnt /mnt/rom 
mount -n /rom/dev -o noatime,--move /dev
mount -n /rom/tmp -o noatime,--move /tmp
mount -n /rom/sys -o noatime,--move /sys
mount -n /rom/overlay -o noatime,--move /overlay


/usr/sbin/grub-mkconfig
GRUB_DEVICE="`${grub_probe} --target=device /`"
#export GRUB_DEVICE=/dev/sda5
#sudo update-grub


git repack --max-pack-size=200m


sudo ip link set can1 type can bitrate 500000
sudo ip link set up can1

sudo ip link set can0 type can bitrate 500000
sudo ip link set up can0



auto can0
iface can0 inet manual
        pre-up /sbin/ip link set $IFACE type can bitrate 500000 on
        up /sbin/ifconfig $IFACE up
        down /sbin/ifconfig $IFACE down


(
    for i in `dpkg -l | grep '^ii' | awk '{print $2}'`; do
        echo $i; sudo dpkg-reconfigure $i;
    done
) 2>&1 | tee dpkg-reconfigure.log

truncate -s 0 /var/log/syslog

echo q | htop | aha --black --line-fix > htop.html

jq -r ".modules_history | keys[]"
cat /etc/autogo/.autogo_update/data_current.json  | jq -r ".[] | .[] | .type "
 jq '.modules_history."'${NAME}'" = "'${VERSION}'"' 
